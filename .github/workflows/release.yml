name: create-release
run-name: Create release '${{ inputs.release_version_number }}'
# What it does:
# - Call release-prepare
# - release_docker job: builds and push the release docker image
# - Call release-publish-draft-and-pr (skip PR creation)
on:
  workflow_dispatch:
    inputs:
      notes:
        description: "Release notes"
        required: false
        type: string
        default: ''
      release_version_number:
        description: "Provide release version number"
        required: true
        type: string

env:
  SERVICE_NAME: uk-functional-tests

jobs:

  release_prepare: # prepare for a release in scm, creates the tag and release branch with the proper release versions
    name: Call release prepare no maven
    uses: SecureApiGateway/secure-api-gateway-parent/.github/workflows/release-prepare.yml@master
    with:
      release_version_number: ${{ inputs.release_version_number }}
      require_maven: false
    secrets:
      GIT_COMMIT_USERNAME_BOT: ${{ secrets.GIT_COMMIT_USERNAME_BOT }}
      GIT_COMMIT_AUTHOR_EMAIL_BOT: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL_BOT }}
      release_github_token: ${{ secrets.RELEASE_PAT }}

  release_docker:
    runs-on: ubuntu-latest
    name: Release docker
    needs: [ release_prepare ]
    steps:
      - uses: actions/checkout@v4
        id: checkout_tag
        name: checkout tag
        with:
          ref: ${{ needs.release_prepare.outputs.release_tag_ref }}

      - uses: google-github-actions/auth@v2
        id: gcloud_auth
        with:
          credentials_json: ${{ secrets.DEV_GAR_KEY }}

      - name: Set up Cloud SDK
        id: gcloud_sdk
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Set up docker auth
        id: gcloud_docker_auth
        run: |
          gcloud auth configure-docker europe-west4-docker.pkg.dev

      - name: prepare context
        id: prepare_context
        run: |
          echo "GIT_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Image
        id: build_docker
        run: |
          make docker tag=${{ env.GIT_SHA_SHORT }} repo=${{ vars.GAR_RELEASE_REPO }} name=${{ env.SERVICE_NAME }}
          docker tag ${{ vars.GAR_RELEASE_REPO }}/securebanking/${{ env.SERVICE_NAME}}:${{ env.GIT_SHA_SHORT }} ${{ vars.GAR_RELEASE_REPO }}/securebanking/tests/${{ env.SERVICE_NAME}}:latest
          docker tag ${{ vars.GAR_RELEASE_REPO }}/securebanking/${{ env.SERVICE_NAME}}:${{ env.GIT_SHA_SHORT }} ${{ vars.GAR_RELEASE_REPO }}/securebanking/tests/${{ env.SERVICE_NAME}}:${{ inputs.release_version_number }}
          docker push --all-tags ${{ vars.GAR_RELEASE_REPO }}/securebanking/${{ env.SERVICE_NAME}}

  release_draft:
    name: Call publish
    needs: [release_prepare, release_docker ]
    uses: SecureApiGateway/secure-api-gateway-parent/.github/workflows/release-publish.yml@master
    with:
      release_version_number: ${{ inputs.release_version_number }}
      release_tag_ref: ${{ needs.release_prepare.outputs.release_tag_ref }}
      release_notes: ${{ inputs.notes }}
    secrets:
      release_github_token: ${{ secrets.RELEASE_PAT }}
