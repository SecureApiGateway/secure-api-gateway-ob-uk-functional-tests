@startuml
title <font color=orangered>SBAT Dynamic registration: eidas cert
' config '
skinparam backgroundColor #snow
skinparam sequenceArrowThickness 3
skinparam roundcorner 20
skinparam sequenceMessageAlign direction
skinparam sequence {
    ParticipantBorderColor gold
}
box "Services" #whitesmoke
    participant IG #gold
    participant AM #gold
    participant IDM #gold
end box

autonumber "<font color=grey>  (##)"

group Dynamic registration request
    hnote over IG #papayawhip
    {{dynamic_registration_request}} = (Signed SSA JWT)
    end hnote
    [-> IG: registration request **<font color=grey>"POST https://{{FQDN}}/am/oauth2/realms/root/realms/alpha/register"</font>**
    IG -> AM: **<font color=grey>service_account.ig</font>** Get access_token
    AM -[#0000FF]-> IG: access_token
    IG -> AM: registration request **<font color=grey>(/am/oauth2/realms/root/realms/alpha/register)</font>**
    AM -[#0000FF]-> IG: registration response
    group Create api client and api client organisation
        IG -> IDM: create api client **<font color=grey>/openidm/managed/apiClient?_action=create</font>**
        IDM -[#0000FF]-> IG: api client response
        IG -> IDM: Create api client organisation **<font color=grey>/openidm/managed/apiClientOrg?_action=create</font>**
        IDM -[#0000FF]-> IG: api client organisation reponse
    end group
    IG -[#0000FF]->[: registration response
    note left of IG #papayawhip
    {
        "token_endpoint_auth_signing_alg": "PS256",
        "request_object_encryption_alg": "RSA-OAEP-256",
        "introspection_encrypted_response_alg": "RSA-OAEP-256",
        "default_max_age": 1,
        "jwks": {
            "keys": [
                {
                    "kty": "RSA",
                    "kid": "-218354332397612390",
                    "use": "sig",
                    "alg": "PS256",
                    "n": "lpttpd...prLw",
                    "e": "AQAB"
                }
            ]
        },
        "application_type": "web",
        "introspection_encrypted_response_enc": "A128CBC-HS256",
        "introspection_signed_response_alg": "RS256",
        "userinfo_encrypted_response_enc": "",
        "registration_client_uri": "https://sapig.dev.forgerock.financial/am/oauth2/realms/root/realms/alpha/register?client_id=fc425638-da2f-465d-b9ec-8bbb34cc75ec",
        "client_type": "Confidential",
        "userinfo_encrypted_response_alg": "",
        "registration_access_token": "eyJ0eXAi...PgkE2Q",
        "client_id": "fc425638-da2f-465d-b9ec-8bbb34cc75ec",
        "token_endpoint_auth_method": "private_key_jwt",
        "userinfo_signed_response_alg": "",
        "software_statement": "eyJ0eX...9OZvg",
        "software_id": "acmefintechid",
        "public_key_selector": "jwks",
        "scope": "openid payments accounts eventpolling",
        "authorization_code_lifetime": 0,
        "client_secret": "MhyjEox...YtOQQ",
        "user_info_response_format_selector": "JSON",
        "tls_client_certificate_bound_access_tokens": true,
        "backchannel_logout_session_required": false,
        "request_object_encryption_enc": "A128CBC-HS256",
        "client_name": "acmefintech application",
        "id_token_signed_response_alg": "PS256",
        "default_max_age_enabled": false,
        "token_intro_response_format_selector": "JSON",
        "subject_type": "public",
        "grant_types": [
            "authorization_code",
            "refresh_token",
            "client_credentials"
        ],
        "jwt_token_lifetime": 0,
        "id_token_encryption_enabled": false,
        "redirect_uris": [
            "https://obdemo.dev.forgerock.financial/tpp",
            "https://tpp.com/callback"
        ],
        "id_token_encrypted_response_alg": "RSA-OAEP-256",
        "id_token_encrypted_response_enc": "A128CBC-HS256",
        "client_secret_expires_at": 0,
        "access_token_lifetime": 0,
        "refresh_token_lifetime": 0,
        "scopes": [
            "openid",
            "payments",
            "accounts",
            "eventpolling"
        ],
        "request_object_signing_alg": "PS256",
        "response_types": [
            "code id_token"
        ]
    }
    end note
end group
@enduml
